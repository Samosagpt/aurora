[pytest]
# Pytest configuration for Aurora project

# Test discovery patterns
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Directories to search for tests
testpaths =
    .
    tests

# Minimum version
minversion = 7.4

# Command line options
addopts =
    # Verbose output
    -v
    # Show summary of all test outcomes
    -ra
    # Show local variables in tracebacks
    -l
    # Enable strict markers
    --strict-markers
    # Show warnings
    -W default
    # Coverage options (uncomment to enable by default)
    # --cov=.
    # --cov-report=term-missing
    # --cov-report=html
    # --cov-report=xml
    # Fail on first error (comment out for full test run)
    # -x

# Markers for test categorization
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    unit: marks tests as unit tests
    requires_ollama: marks tests that require Ollama to be running
    requires_gpu: marks tests that require GPU
    requires_internet: marks tests that require internet connection
    desktop_only: marks tests that only work on desktop (not in CI)
    windows_only: marks tests that only work on Windows
    linux_only: marks tests that only work on Linux

# Ignore certain warnings
filterwarnings =
    # Ignore deprecation warnings from third-party libraries
    ignore::DeprecationWarning:torch.*
    ignore::DeprecationWarning:transformers.*
    ignore::UserWarning:streamlit.*

# Test timeout (in seconds) - requires pytest-timeout
timeout = 300
timeout_method = thread

# Logging
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Disable cacheprovider if needed
# cache_dir = .pytest_cache

# Parallel execution settings (requires pytest-xdist)
# Uncomment to enable parallel testing
# addopts = -n auto
